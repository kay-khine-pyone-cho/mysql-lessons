=> Database Trigger

=Syntax

CREATE TRIGGER triggername
trigger_time trigger_event ON tablename FOR EACH ROW
BEGIN
    -- statments
END

=>trigger_time
BEFORE
AFTER

=>trigger_event
INERT
UPDATE
DELETE
____________________________________________________

CREATE TABLE IF NOT EXISTS borrowers(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50),
    password VARCHAR(225),
    age INT,
    status INT DEFAULT 1
);

INSERT INTO borrowers (username,password,age)
VALUES ('aung aung',MD5(SHA1('12345')),18),
 ('zawzaw',MD5(SHA1('12345')),30);

SELECT * FROM borrowers;
__________

=> IF statments (IF-THEN-ELSE statment)

IF condition1 THEN
   ...... statments to execute
END IF;

----

IF condition1 THEN
   ...... statments to execute
ELSEIF condition2 THEN 
   ...... statments to execute
ELSE 
   ...... statments to execute
END IF;

__________

=>BEFORE INSERT 

Note : DELIMITER // DELIMITER $$ DELIMITER |

DELIMITER //

CREATE TRIGGER borrowerstatus_bfc 
BEFORE INSERT ON borrowers FOR EACH ROW 
BEGIN
    IF NEW.age < 18 THEN SET NEW.status = 2;
    END IF;
END; //

DELIMITER ;

SHOW TRIGGERS; (or) SHOW TRIGGERS LIKE 'borrower%'; 
SHOW TRIGGERS LIKE 'borrower%'\G; 

INSERT INTO borrowers(username,password,age)
VALUES ('hninhnin',MD5(SHA1(12345)),16);

SELECT * FROM borrowers;

INSERT INTO borrowers(username,password,age)
VALUES ('thida',MD5(SHA1(12345)),35);

SELECT * FROM borrowers;

DROP TRIGGER;
DROP TRIGGER IF EXISTS borrowerstatus_bfc;

SHOW TRIGGERS LIKE 'borrower%'\G; 

INSERT INTO borrowers(username,password,age)
VALUES ('june',MD5(SHA1(12345)),14);

SELECT * FROM borrowers;

----

*error 
DELIMITER //

CREATE TRIGGER borrowerstatus_bfc 
BEFORE INSERT ON borrowers FOR EACH ROW 
BEGIN
    IF NEW.age < 18 THEN SET NEW.status = 2;
    END IF;
END; //

----
_____________________________________________________

DELIMITER |

CREATE TRIGGER borrowerstatus_bfc
BEFORE INSERT 
ON borrowers FOR EACH ROW 
BEGIN
    IF NEW.age < 18 THEN SET NEW.status = 2;
    ELSEIF NEW.age > 45 THEN SET NEW.status = 3;
    END IF;        
END; | 

DELIMITER ;

SELECT * FROM borrowers;

INSERT INTO borrowers(username,password,age)
VALUES ('yamin',MD5(SHA1(12345)),50);

SELECT * FROM borrowers;

INSERT INTO borrowers(username,password,age)
VALUES ('tuntun',MD5(SHA1(12345)),28);

SELECT * FROM borrowers;

INSERT INTO borrowers(username,password,age)
VALUES ('april',MD5(SHA1(12345)),12);

SELECT * FROM borrowers;

DROP TRIGGER IF EXISTS borrowerstatus_bfc;

_____________________________ 

=>Mysql ERRORS 

A numeric error code(1146)
SQLSTATE value('42S02').string / 5 characters
Message String  - description of the error 

_____________________________

DELIMITER $$

CREATE TRIGGER borrowerrestrict_bfc
BEFORE INSERT ON borrowers FOR EACH ROW
BEGIN
    IF NEW.age < 18 THEN 
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Oh,we cannot provide loan for this user';
    END IF;
END; $$

DELIMITER ;

INSERT INTO borrowers(username,password,age)
VALUES ('susu',MD5(SHA1(12345)),35);

SELECT * FROM borrowers;

*error with message 45000
INSERT INTO borrowers(username,password,age)
VALUES ('yuyu',MD5(SHA1(12345)),16);

SELECT * FROM borrowers;

INSERT INTO borrowers(username,password,age)
VALUES ('kyawkyaw',MD5(SHA1(12345)),55);

SELECT * FROM borrowers;

DROP TRIGGER IF EXISTS borrowerstatus_bfc;

____________________________________________________________________

=>AFTER INSERT

CREATE TABLE IF NOT EXISTS borrowercreators(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    borrower_id INT,
    created_at TIMESTAMP DEFAULT NOW(),
    created_by VARCHAR(50)
);

DESC borrowercreators;

DELIMITER //

CREATE TRIGGER borrowercreator_afc
AFTER INSERT 
ON borrowers FOR EACH ROW 
BEGIN
    DECLARE dbuser VARCHAR(50);
    SELECT USER() INTO dbuser;

    INSERT INTO borrowercreators(borrower_id,created_by)
    VALUES (NEW.id,dbuser);
END; //

DELIMITER ;

INSERT INTO borrowers(username,password,age)
VALUES('hlahla',MD5(SHA1(12345)),23);

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;

INSERT INTO borrowers(username,password,age)
VALUES('myamya',MD5(SHA1(12345)),50);

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;

________________________ 

CREATE TABLE IF NOT EXISTS reminders(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    borrower_id INT,
    message VARCHAR(255) NOT NULL 
);

DESC reminders;

DELIMITER //

CREATE TRIGGER borroweragereminder_afc
AFTER INSERT
ON borrowers FOR EACH ROW 
BEGIN 
    IF NEW.age IS NULL THEN 
    INSERT INTO reminders (borrower_id,message)
    VALUES(NEW.id,CONCAT('Dear ',NEW.username,', please update your age.'));
    END IF;
END; //

DELIMITER ;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;

INSERT INTO borrowers(username,password)
VALUES('thura',MD5(SHA1(12345)));

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;

INSERT INTO borrowers(username,password,age)
VALUES('myomyo',MD5(SHA1(12345)),19);

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;

INSERT INTO borrowers(username,password)
VALUES('naungnaung',MD5(SHA1(12345)));

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;

____________________________________________________________________

=>BEFORE UPDATE

DELIMITER |

CREATE TRIGGER borrowerage_bfu
BEFORE UPDATE
ON borrowers FOR EACH ROW
BEGIN
    DECLARE errmessage VARCHAR(100);
    SET errmessage = CONCAT('The old age is ',OLD.age,'. Sorry, we cannot provide to change.');

    IF OLD.age IS NOT NULL THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT =  errmessage;
    ELSE
        IF NEW.age < 18 THEN SET NEW.status = 2;
        ELSEIF NEW.age > 45 THEN SET NEW.status = 3;
        END IF;
    END IF;
END; |

DELIMITER ;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;

*error with message 45000
UPDATE borrowers SET age = 40 
WHERE id = 1;

UPDATE borrowers SET age = 30 WHERE id = 15;

UPDATE borrowers SET age = 15 WHERE id = 17;

UPDATE borrowers SET age = 50 WHERE id = 13;

INSERT INTO borrowers(username,password)
VALUES('thiri',MD5(SHA1(12345))),
('kyelsin',MD5(SHA1(12345))),
('kotha',MD5(SHA1(12345)));

____________________________________________________________________

=> AFTER UPDATE

DELIMITER $$

CREATE TRIGGER borrowerremainder_afu
AFTER UPDATE
ON borrowers FOR EACH ROW 
BEGIN
    DELETE FROM reminders WHERE borrower_id = NEW.id;
END; $$

DELIMITER;

*error with message 45000
UPDATE borrowers SET age = 40 
WHERE id = 1;

UPDATE borrowers SET age = 30 WHERE id = 16;

UPDATE borrowers SET age = 15 WHERE id = 17;

UPDATE borrowers SET age = 15 WHERE id = 17;


SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM reminders;

____________________________________________________________________

=>BEFORE DELETE

CREATE TABLE IF NOT EXISTS activities (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    borrower_id INT,
    created_at TIMESTAMP DEFAULT NOW(),
    created_by VARCHAR(50)
);

DESC activities;

DELIMITER $$

CREATE TRIGGER borroweracti_bfd
BEFORE DELETE 
ON borrowers FOR EACH ROW  
BEGIN 
 DECLARE dbuser VARCHAR(50);
 SELECT USER() INTO dbuser;

 INSERT INTO activities(borrower_id,created_by)
 VALUES(OLD.id,dbuser);

END; $$

DELIMITER ;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE FROM borrowers WHERE id = 20;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;


DELETE FROM borrowers WHERE id = 18;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

____________________________________________________________________

=>AFTER DELETE

DELIMITER //

CREATE TRIGGER borroweracti_afd
AFTER DELETE
ON borrowers FOR EACH ROW 
BEGIN
    DELETE FROM borrowercreators WHERE borrower_id = OLD.id;
END; //

DELIMITER;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE FROM borrowers WHERE id = 19;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;

DELETE FROM borrowers WHERE id = 19;
DELETE FROM borrowers WHERE id = 15;
DELETE FROM borrowers WHERE id = 16;
DELETE FROM borrowers WHERE id = 17;

SELECT * FROM borrowers;
SELECT * FROM borrowercreators;
SELECT * FROM activities;












