=>Different Types of DATA relationships
(i)One to one Relationship(1:1)
(ii)One to many Relationship(1:n)
(iii)Many to many Relationship(n:n)



(i)One to one Relationship
NOte ::	a employee has exactly one wifi password and ever wifi passcode 			belongs to exactly one employee..like citizen & passport
One record in table 1 belongs to one record in table 2..
wifi password  တခုကို တခါပဲသုံးလို့ရတယ်(Individual password)

(ii)One to many relationship(1:n)
customers & orders
mother & children
one customer can buy many products
one record in tale 1 belongs to many related records in table 2.


(iii)Many to many Relationship(n:n)
not allow direct relationship for many to many
must use a table between two 'many' tables.



CREATE TABLE IF NOT EXISTS studentsofdlt(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
regcode VARCHAR(10) NOT NULL UNIQUE,
firstname VARCHAR(20) NOT NULL,
lastname VARCHAR(20),
gender ENUM('1','2') NOT NULL,
dob DATE NOT NULL,
email VARCHAR(50) NOT NULL UNIQUE,
password VARCHAR(255) NOT NULL,
status ENUM('Enable','Disable','Terminate') DEFAULT 'Enable',
created_at TIMESTAMP DEFAULT NOW(),
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

DESC studentsofdlt;

INSERT INTO studentsofdlt(regcode,firstname,lastname,gender,dob,email,password)
VALUES('WDF1001','aung','aung',1,'2000-1-31','aungaung@gmail.com',MD5(SHA1('12345'))),
('WDF1002','su','su',2,'2000-2-28','susu@gmail.com',MD5(SHA1('12345')));

CREATE TABLE IF NOT EXISTS studentinfos(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
coverphoto VARCHAR(255),
profilephoto VARCHAR(255),
nrcnumber VARCHAR(255) NOT NULL UNIQUE,
phone VARCHAr(15) NOT NULL UNIQUE,
address VARCHAR(255) NOT NULL,
student_id INT,
FOREIGN KEY(student_id) REFERENCES studentsofdlt(id) ON UPDATE CASCADE ON DELETE CASCADE
);

DESC studentinfos;

INSERT INTO studentinfos(nrcnumber,phone,address,student_id) VALUES
('10/MaLAMa(N)123456','09123456','no19,myittar st,mawlamyein',1),
('10/MaLAMa(N)123457','09678999','no42,thidarr st,mawlamyein',2);


CREATE TABLE IF NOT EXISTS teachers(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(30) NOT NULL,
phone VARCHAr(15) NOT NULL UNIQUE,
email VARCHAR(50) NOT NULL UNIQUE
);

DESC teachers;
INSERT INTO teachers(name,phone,email)
VALUE('ko tha','09123789','kotha@gmail.com');

SELECT * FROM teachers;
SELECT * FROM studentsofdlt;
SELECT * FROM studentinfos;

------7/3/22
CREATE TABLE IF NOT EXISTS subjects(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
course VARCHAR(100) NOT NULL UNIQUE,
subjecttype SET('THEORY','PROJECT') NOT NULL,
fee DECIMAL(10,2) DEFAULT 0,
requirements VARCHAR(255)
);

DESC subjects;

INSERT INTO subjects(course,subjecttype,fee,requirements) VALUES
('web development foundation','theory',0,'computer basic'),
('css animation','project',10000,'wdf'),
('javascript l1','project',5000,'wdf,css animation'),
('javascript oop','theory,project',25000,'wdf,css animation,l1,l2,l3'),
('react js','theory,project',35000,'javascript oop');

SELECT * FROM subjects;
------
CREATE TABLE IF NOT EXISTS classes(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
subject_id INT,
batch INT NOT NULL,
week SET('Sun','Mon','Tue','Wed','Thu','Fri','Sat') NOT NULL,
startdate DATE NOT NULL,
starttime TIME NOT NULL,
endtime TIME NOT NULL,
teacher_id INT,
FOREIGN KEY(subject_id) REFERENCES subjects(id),
FOREIGN KEY(teacher_id) REFERENCES teachers(id)
);

DESC classes;

INSERT INTO classes (subject_id,batch,week,startdate,starttime,endtime,teacher_id) VALUES
(4,1,'sat,sun','2022-4-1','9:00:00','12:00:00',1),
(5,1,'sat,sun,mon','2022-4-1','16:00:00','18:00:00',1);

SELECT * FROM classes;
-------

CREATE TABLE IF NOT EXISTS enrollments(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
paymentmethod ENUM('kpay','cbpay','kbz','cb','topup' )NOT NULL,
class_id INT,
student_id INT,
status ENUM('Enable','Disable') DEFAULT 'Enable',
created_at TIMESTAMP DEFAULT NOW(),
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY(class_id) REFERENCES classes(id) ON UPDATE CASCADE,
FOREIGN KEY(student_id) REFERENCES studentsofdlt(id) ON UPDATE CASCADE
);

DESC enrollments;

INSERT INTO enrollments(paymentmethod,class_id,student_id) VALUES
(1,1,1),
(1,2,1),
(3,1,2);

SELECT * FROM enrollments;
------

CREATE TABLE IF NOT EXISTS reviews(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
rating INT NOT NULL CHECK(rating <= 5),
remark VARCHAR(255),
class_id INT,
student_id INT,
created_at TIMESTAMP DEFAULT NOW(),
updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
FOREIGN KEY(class_id) REFERENCES classes(id) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY(student_id) REFERENCES studentsofdlt(id) ON UPDATE CASCADE ON DELETE CASCADE
);

DESC reviews;

INSERT INTO reviews(rating,remark,class_id,student_id) VALUES
(3,'not bad',1,1),
(4,'satisfy',2,1),
(5,'fyi',1,2);

SELECT * FROM reviews;

CREATE TABLE IF NOT EXISTS attendences(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
classdate DATE NOT NULL DEFAULT(CURRENT_DATE),
class_id INT,
student_id INT,
attcode VARCHAR(10) NOT NULL,
remark VARCHAR(255),
created_at TIMESTAMP DEFAULT NOW(),
FOREIGN KEY(class_id) REFERENCES classes(id) ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY(student_id) REFERENCES students(id) ON UPDATE CASCADE ON DELETE CASCADE 
);

**error*** DEFAULT NOW()
**error*** DEFAULT CURDATE() at attendences.classdate


DESC attendences;

INSERT INTO attendences(class_id,student_id,attcode) VALUES
(1,1,'7OOP'),
(2,1,'7RC'),
(1,2,'7OOP');

SELECT * FROM attendences;

_______________________________________________________________________

SELECT USER();
SELECT CURRENT_USER();
SELECT SYSTEM_USER();
SELECT SESSION_USER();

SELECT @@version;
SELECT VERSION();


webserver
databaseserver
emailserver
fileserver(ftp server)

cd \
cd xampp
cd mysql
cd bin
mysql -u mya -p
mya6320




